import type { DrawerProps as RcDrawerProps } from 'rc-drawer';
import * as React from 'react';
declare const SizeTypes: ["default", "large"];
declare type sizeType = typeof SizeTypes[number];
export interface PushState {
    distance: string | number;
}
export interface DrawerProps extends RcDrawerProps {
    size?: sizeType;
    closable?: boolean;
    closeIcon?: React.ReactNode;
    /** Wrapper dom node style of header and body */
    drawerStyle?: React.CSSProperties;
    headerStyle?: React.CSSProperties;
    bodyStyle?: React.CSSProperties;
    footerStyle?: React.CSSProperties;
    title?: React.ReactNode;
    visible?: boolean;
    footer?: React.ReactNode;
    extra?: React.ReactNode;
    afterVisibleChange?: (visible: boolean) => void;
}
declare function Drawer({ width, height, size, closable, mask, push, closeIcon, bodyStyle, drawerStyle, className, visible, children, zIndex, style, title, headerStyle, onClose, footer, footerStyle, prefixCls: customizePrefixCls, getContainer: customizeGetContainer, extra, afterVisibleChange, ...rest }: DrawerProps): JSX.Element;
declare namespace Drawer {
    var displayName: string;
}
export default Drawer;
